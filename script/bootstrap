#!/bin/bash

# script/bootstrap: Resolve all dependencies that the application requires to
#                   run.

check_installed()
{
if ! which "$1" &> /dev/null;
then
    printf "  \e[31;1m❌ %s is not installed\n\e[0m" "$1"
    return 1
else
    printf "  \e[32;1m✅ %s is installed\n\e[0m" "$1"
    return 0
fi
}


printf '\n\e[0;1m bootstraping the environment\n\e[0m'
printf ' ---------------------------- \n'

check_installed brew
brew_check=$?
check_installed pyenv
pyenv_check=$?
check_installed poetry
poetry_check=$?

sleep 2

if [[ brew_check -ne 0 ]]; then
    printf "\ndo you want to install brew? (y/n) "
    read -r answer
    if [ "$answer" != "${answer#[Yy]}" ] ;then
        echo -e "Yes\n"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

        sleep 2
    else
        echo -e "No\n"
    fi
fi


if [[ pyenv_check -ne 0 ]]; then
    printf "\ndo you want to install pyenv? (y/n) "
    read -r answer
    if [ "$answer" != "${answer#[Yy]}" ] ;then
        echo -e "Yes\n"

        # brew update and install pyenv
        brew update
        brew install pyenv

        # shellcheck disable=SC2016
        { echo 'export PYENV_ROOT="$HOME/.pyenv"';
         echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"';
         echo 'eval "$(pyenv init -)"'; } >> ~/.zshrc

        sleep 2
    else
        echo -e "No\n"
    fi
fi


# shellcheck source=/dev/null
source "$HOME/.zshrc"

# which python version
printf "\nselect a \e[1mpython version\e[0m for the project (e.g, 3.10): "
read -r pyans
echo "$pyans" > .python-version
printf "\n"
# run pyenv to install the .python-version
pyenv install

if [[ poetry_check -ne 0 ]]; then
    printf "\ndo you want to install poetry? (y/n) "
    read -r answer
    if [ "$answer" != "${answer#[Yy]}" ] ;then
        echo -e "Yes\n"

        # install poetry using pip
        pip install poetry

        sleep 2
    else
        echo -e "No\n"
    fi
fi
