#!/bin/bash

# script/bootstrap: Resolve all dependencies that the application requires to
#                   run.

check_installed() {
    for app in "$@"
    do
        if ! which "$app" &> /dev/null
        then
            printf "  \e[31;1m❌ %s is not installed\n\e[0m" "$app"
        else
            printf "  \e[32;1m✅ %s is installed\n\e[0m" "$app"
        fi
    done
}

install_command(){
    case "$1" in
    "brew")
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        ;;
    "pyenv")
        brew update && brew install pyenv

        # shellcheck disable=SC2016
        { echo 'export PYENV_ROOT="$HOME/.pyenv"';
        echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"';
        echo 'eval "$(pyenv init -)"'; } >> ~/.zshrc
        ;;
    "poetry")
        pip install poetry
        ;;
    esac
}

install_package(){
    if ! which "$1" &> /dev/null
    then
        printf "\ndo you want to install %s? (y/n) " "$1"
        read -r answer
        if [ "$answer" != "${answer#[Yy]}" ] ;then
            echo -e "Yes\n"
            install_command "$1"
            sleep 2
        else
            echo -e "No\n"
        fi
    fi

}

config_python(){

    # which python version
    printf "\nselect a \e[1mpython version\e[0m for the project (e.g, 3.10): "
    read -r pyans
    echo "$pyans" > .python-version
    printf "\n"

    # run pyenv to install the .python-version
    pyenv install
}

main(){
    printf '\n\e[0;1m bootstraping the environment\n\e[0m'
    printf ' ---------------------------- \n'
    check_installed brew pyenv poetry

    sleep 2

    install_package brew
    install_package pyenv

    # shellcheck source=/dev/null
    source "$HOME/.zshrc"

    python_config

    install_package poetry
}

main "$@"
